<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.wuxianjie.springbootweb.role.RoleMapper">
  <resultMap id="baseMap" type="net.wuxianjie.springbootweb.role.dto.RoleBaseInfo">
    <constructor>
      <idArg column="id" javaType="_long"/>
      <arg column="name" javaType="string"/>
      <arg column="authorities" javaType="string"/>
      <arg column="parent_id" javaType="long"/>
      <arg column="parent_name" javaType="string"/>
      <arg column="full_path" javaType="string"/>
      <arg column="updated_at" javaType="java.util.Date"/>
      <arg column="remark" javaType="string"/>
    </constructor>
  </resultMap>

  <select id="selectBaseById" resultMap="baseMap">
    select id,
           name,
           authorities,
           parent_id,
           parent_name,
           full_path,
           updated_at,
           remark
    from role
    where id = #{roleId}
  </select>

  <select id="existsRoleByName" resultType="boolean">
    select exists(select 1 from role where name = #{name})
  </select>

  <select id="existsRoleByFullPathLike" resultType="boolean">
    select exists(select 1 from role where full_path like #{fullPath})
  </select>

  <select id="existsUserByRoleId" resultType="boolean">
    select exists(select 1 from user where role_id = #{roleId})
  </select>

  <select id="selectByFullPathEqOrLikeOrderByFullPath" resultType="net.wuxianjie.springbootweb.role.dto.RoleItemResponse">
    select id,
           name,
           parent_id   as parentId,
           parent_name as parentName,
           updated_at  as updatedAt
    from role
    where full_path = #{fullPath} or full_path like concat(#{fullPath}, '.%')
    order by full_path
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into role (name, authorities, parent_id, parent_name, full_path, created_at, updated_at, remark)
    values (#{name}, #{authorities}, #{parentId}, #{parentName}, #{fullPath}, #{createdAt}, #{updatedAt}, #{remark})
  </insert>

  <update id="update">
    update role
    <set>
      updated_at = now(),
      <if test="name != null">name = #{name},</if>
      <if test="authorities != null">authorities = #{authorities},</if>
      <if test="parentId != null">parent_id = #{parentId},</if>
      <if test="parentName != null">parent_name = #{parentName},</if>
      <if test="fullPath != null">full_path = #{fullPath},</if>
      <if test="remark != null">remark = #{remark},</if>
    </set>
    where id = #{id}
  </update>

  <update id="updateParentNameByParentId">
    update role
    set updated_at  = now(),
        parent_name = #{parentName}
    where parent_id = #{parentId}
  </update>

  <update id="updateFullPathByFullPathLike">
    update role
    set updated_at = now(),
      full_path  = replace(full_path, #{oldFullPath}, #{newFullPath})
    where full_path like concat(#{oldFullPath}, '%')
  </update>

  <delete id="deleteById">
    delete
    from role
    where id = #{roleId}
  </delete>
</mapper>
